// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    ext {
        kotlin_version = '1.3.72'
    }
    ext.versions = [
            "kotlin": "1.4.32",
            "buildToolsVersion": "30.0.3",
            "compileSdkVersion":30,
            "minSdkVersion": 23,
            "targetSdkVersion": 30,
            "versionCode": 1,
            "versionName": "1.0"
    ]
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.1.3"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath 'com.google.dagger:hilt-android-gradle-plugin:2.28-alpha'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

subprojects {
    afterEvaluate { project ->
        if (project.hasProperty('android')) {

            android {
                buildToolsVersion versions.buildToolsVersion
                compileSdkVersion versions.compileSdkVersion

                defaultConfig {
                    minSdkVersion versions.minSdkVersion
                    targetSdkVersion versions.targetSdkVersion
                    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
                }


                variantFilter { variant ->
                    def name_types = variant.flavors*.name
                    def name = name_types.join()
                    if (variant.buildType.name == "release" && (name.contains("development") || name.contains("stagging"))) {
                        setIgnore(true)
                    }

                }
                buildTypes {
                    release {
                        minifyEnabled true
                        useProguard true
                        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                    }
                    qcTesting {
                        initWith release
                    }
                }
                def BASE_URL = "BASE_URL"
                flavorDimensions "mode"
                productFlavors {
                    live {
                        dimension "mode"
//                        buildConfigField "String", BASE_URL, '"https://se7etak.azurewebsites.net/"'
                        buildConfigField "String", BASE_URL, '"http://dummy.restapiexample.com/api/v1/"'
                    }
                    development {
                        dimension "mode"
//                        buildConfigField "String", BASE_URL, '"https://se7etakdev.azurewebsites.net/"'
                        buildConfigField "String", BASE_URL, '"http://dummy.restapiexample.com/api/v1/"'

                    }
                    stagging {
                        dimension "mode"
//                        buildConfigField "String", BASE_URL, '"https://se7etaktest.azurewebsites.net/"'
                        buildConfigField "String", BASE_URL, '"http://dummy.restapiexample.com/api/v1/"'

                    }
                }

                buildFeatures {
                    viewBinding = true
                }

                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_1_8
                    targetCompatibility JavaVersion.VERSION_1_8
                }
            }
        }
    }
}


task clean(type: Delete) {
    delete rootProject.buildDir
}